{"ast":null,"code":"var _jsxFileName = \"E:\\\\3rd_Sem\\\\Advance-Web-Tech\\\\Harry-potter-final\\\\client\\\\src\\\\components\\\\Header.js\";\nimport React, { Component } from 'react'; // import logo from './logo.svg';\n\nimport { red } from '@material-ui/core/colors';\nimport './Header.css';\nimport { makeStyles, AppBar, Toolbar, IconButton, Button, Typography, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, FormControl, InputLabel, FormLabel, RadioGroup, FormControlLabel, Radio, Input } from '@material-ui/core'; // const styles = theme => ({\n//     root: {\n//       flexGrow: 3,\n//     },\n//     form_root: {\n//       '& > *': {\n//         margin: theme.spacing(1),\n//       },\n//     },\n//     menuButton: {\n//       marginRight: theme.spacing(2),\n//     },\n//     title: {\n//         color: red,\n//       flexGrow: 1,\n//     },\n//     paper: {\n//       height: 280,\n//       width: 500,\n//     },\n//     control: {\n//       padding: theme.spacing(2),\n//     },\n//     hufflepuff: {\n//       //backgroundImage: `url(${logo})`,\n//       height: 280,\n//       backgroundPosition: 'center',\n//       filter: 9,\n//       backgroundSize: 'cover',\n//       backgroundRepeat: 'no-repeat'\n//     },\n//     card: {\n//       maxWidth: 500,\n//     },\n//     media: {\n//       height: 150,\n//       margin: 50,\n//       padding: 10,\n//       paddingTop: '50.25%', // 16:9\n//     },\n//     expand: {\n//       transform: 'rotate(0deg)',\n//       marginLeft: 'auto',\n//       transition: theme.transitions.create('transform', {\n//         duration: theme.transitions.duration.shortest,\n//       }),\n//     },\n//     expandOpen: {\n//       transform: 'rotate(180deg)',\n//     },\n//     avatar: {\n//       backgroundColor: red[500],\n//     },\n//     tableRoot: {\n//       width: '100%',\n//     },\n//     tableContainer: {\n//       maxHeight: 440,\n//     },\n//     modal_paper: {\n//       position: 'absolute',\n//       width: 400,\n//       backgroundColor: theme.palette.background.paper,\n//       border: '2px solid #000',\n//       boxShadow: theme.shadows[5],\n//       padding: theme.spacing(2, 4, 3),\n//     },\n//   });\n// //   const classes = useStyles()\n\nclass Header extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      gryffindor: ''\n    };\n  }\n\n  //   getResponse = async() => {\n  //     const response = await fetch('/api/getStudents');\n  //     const body = await response.json();\n  // \tconsole.log(\"body\");\n  //     if (response.status !== 200) throw Error(body.message);\n  //     return body;\n  //   }\n  //   componentDidMount() {\n  //     this.getResponse()\n  //       .then(res => {\n  //         const someData = res.students[0].firstname;\n  //         this.setState({ renderedResponse: someData });\n  //       })\n  //   }\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(AppBar, {\n      position: \"static\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Hogwarts\"), React.createElement(Button, {\n      color: \"inherit\",\n      className: \"addStudentBtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Add Student /Professor\"))));\n  }\n\n}\n\nexport default Header;","map":{"version":3,"sources":["E:/3rd_Sem/Advance-Web-Tech/Harry-potter-final/client/src/components/Header.js"],"names":["React","Component","red","makeStyles","AppBar","Toolbar","IconButton","Button","Typography","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","FormControl","InputLabel","FormLabel","RadioGroup","FormControlLabel","Radio","Input","Header","state","gryffindor","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,GAAT,QAAoB,0BAApB;AAEA,OAAO,cAAP;AACA,SACIC,UADJ,EACgBC,MADhB,EACwBC,OADxB,EACiCC,UADjC,EAC6CC,MAD7C,EACqDC,UADrD,EACiEC,MADjE,EACyEC,WADzE,EAEIC,aAFJ,EAEmBC,iBAFnB,EAEsCC,aAFtC,EAEqDC,WAFrD,EAEkEC,UAFlE,EAGIC,SAHJ,EAGeC,UAHf,EAG2BC,gBAH3B,EAG6CC,KAH7C,EAGoDC,KAHpD,QAIO,mBAJP,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMC,MAAN,SAAqBpB,SAArB,CAA+B;AAAA;AAAA;AAAA,SAMzBqB,KANyB,GAMjB;AACNC,MAAAA,UAAU,EAAE;AADN,KANiB;AAAA;;AAU3B;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,MAAM,GAAG;AAEL,WACI,0CACI,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAII,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,SAAS,EAAC,eAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAJJ,CADJ,CADJ,CADJ;AAqCH;;AAjE0B;;AAoE/B,eAAeH,MAAf","sourcesContent":["import React, { Component } from 'react';\r\n// import logo from './logo.svg';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nimport './Header.css';\r\nimport {\r\n    makeStyles, AppBar, Toolbar, IconButton, Button, Typography, Dialog, DialogTitle,\r\n    DialogContent, DialogContentText, DialogActions, FormControl, InputLabel,\r\n    FormLabel, RadioGroup, FormControlLabel, Radio, Input\r\n} from '@material-ui/core';\r\n// const styles = theme => ({\r\n//     root: {\r\n//       flexGrow: 3,\r\n//     },\r\n//     form_root: {\r\n//       '& > *': {\r\n//         margin: theme.spacing(1),\r\n//       },\r\n//     },\r\n//     menuButton: {\r\n//       marginRight: theme.spacing(2),\r\n//     },\r\n//     title: {\r\n//         color: red,\r\n//       flexGrow: 1,\r\n//     },\r\n//     paper: {\r\n//       height: 280,\r\n//       width: 500,\r\n//     },\r\n//     control: {\r\n//       padding: theme.spacing(2),\r\n//     },\r\n//     hufflepuff: {\r\n//       //backgroundImage: `url(${logo})`,\r\n//       height: 280,\r\n//       backgroundPosition: 'center',\r\n//       filter: 9,\r\n//       backgroundSize: 'cover',\r\n//       backgroundRepeat: 'no-repeat'\r\n//     },\r\n//     card: {\r\n//       maxWidth: 500,\r\n//     },\r\n//     media: {\r\n//       height: 150,\r\n//       margin: 50,\r\n//       padding: 10,\r\n//       paddingTop: '50.25%', // 16:9\r\n//     },\r\n//     expand: {\r\n//       transform: 'rotate(0deg)',\r\n//       marginLeft: 'auto',\r\n//       transition: theme.transitions.create('transform', {\r\n//         duration: theme.transitions.duration.shortest,\r\n//       }),\r\n//     },\r\n//     expandOpen: {\r\n//       transform: 'rotate(180deg)',\r\n//     },\r\n//     avatar: {\r\n//       backgroundColor: red[500],\r\n//     },\r\n//     tableRoot: {\r\n//       width: '100%',\r\n//     },\r\n//     tableContainer: {\r\n//       maxHeight: 440,\r\n//     },\r\n//     modal_paper: {\r\n//       position: 'absolute',\r\n//       width: 400,\r\n//       backgroundColor: theme.palette.background.paper,\r\n//       border: '2px solid #000',\r\n//       boxShadow: theme.shadows[5],\r\n//       padding: theme.spacing(2, 4, 3),\r\n//     },\r\n//   });\r\n\r\n// //   const classes = useStyles()\r\n\r\nclass Header extends Component {\r\n    // const classes = useStyles()\r\n    //   constructor() {\r\n    //     super();\r\n    //   }\r\n\r\n      state = {\r\n        gryffindor: ''\r\n      }\r\n\r\n    //   getResponse = async() => {\r\n    //     const response = await fetch('/api/getStudents');\r\n    //     const body = await response.json();\r\n    // \tconsole.log(\"body\");\r\n    //     if (response.status !== 200) throw Error(body.message);\r\n    //     return body;\r\n    //   }\r\n\r\n    //   componentDidMount() {\r\n    //     this.getResponse()\r\n    //       .then(res => {\r\n    //         const someData = res.students[0].firstname;\r\n    //         this.setState({ renderedResponse: someData });\r\n    //       })\r\n    //   }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <Typography variant=\"h4\">\r\n                            Hogwarts\r\n                        </Typography>\r\n                        <Button color=\"inherit\" className=\"addStudentBtn\">Add Student /Professor</Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                {/* <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\"> Create Student</DialogTitle>\r\n            <DialogContent>\r\n            \r\n                <FormControl fullWidth>\r\n                    <InputLabel htmlFor=\"component-simple\">First Name</InputLabel>\r\n                    <Input id=\"firstname\" value={firstName} onChange={handleChangeFirstName} />\r\n                </FormControl>\r\n                <FormControl fullWidth>\r\n                    <InputLabel htmlFor=\"component-simple\">Last Name</InputLabel>\r\n                    <Input id=\"lastname\" value={lastName} onChange={handleChangeLastName} />\r\n                </FormControl>\r\n                <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Gender</FormLabel>\r\n                    <RadioGroup aria-label=\"gender\" name=\"gender2\" value={value} onChange={handleChangeRadio}>\r\n                        <FormControlLabel value=\"female\" control={<Radio color=\"primary\" />} label=\"Female\" labelPlacement=\"start\" />\r\n                        <FormControlLabel value=\"male\" control={<Radio color=\"primary\" />} label=\"Male\" labelPlacement=\"start\" />\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                    Create Student</Button>\r\n            </DialogActions>\r\n        </Dialog> */}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;"]},"metadata":{},"sourceType":"module"}